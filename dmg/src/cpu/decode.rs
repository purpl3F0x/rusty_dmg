use std::panic;

use super::*;

use Register8;

impl CPU {
    pub fn run_instr(&mut self) {
        let pc = self.pc;
        let byte = self.read_instruction();

        log::trace!(
            "A: {:02X} F: {:02X} B: {:02X} C: {:02X} D: {:02X} E: {:02X} H: {:02X} L: {:02X} SP: {:04X} PC: 00:{:04X} ({:02X} {:02X} {:02X} {:02X})",
            self.a(),
            self.f(),
            self.b(),
            self.c(),
            self.d(),
            self.e(),
            self.h(),
            self.l(),
            self.sp,
            pc,
            byte,
            self.mmu.borrow().read(pc+1),
            self.mmu.borrow().read(pc+2),
            self.mmu.borrow().read(pc+3)
        );

        match byte {
            0x00 => self.nop(),
            0x01 => self.ld_rr_nn(Register16::BC),
            0x02 => self.ld_bc_a(),
            0x03 => self.inc_rr(Register16::BC),
            0x04 => self.inc_r(Register8::B),
            0x05 => self.dec_r(Register8::B),
            0x06 => self.ld_r_n(Register8::B),
            0x07 => self.rlca(),
            0x08 => self.ld_nn_sp(),
            0x09 => self.add_hl(Register16::BC),
            0x0A => self.ld_a_rr(self.bc.value()),
            0x0B => self.dec_rr(Register16::BC),
            0x0C => self.inc_r(Register8::C),
            0x0D => self.dec_r(Register8::C),
            0x0E => self.ld_r_n(Register8::C),
            0x0F => self.rrca(),

            0x10 => self.stop(),
            0x11 => self.ld_rr_nn(Register16::DE),
            0x12 => self.ld_de_a(),
            0x13 => self.inc_rr(Register16::DE),
            0x14 => self.inc_r(Register8::D),
            0x15 => self.dec_r(Register8::D),
            0x16 => self.ld_r_n(Register8::D),
            0x17 => self.rla(),
            0x18 => self.jr_e(),
            0x19 => self.add_hl(Register16::DE),
            0x1A => self.ld_a_rr(self.de.value()),
            0x1B => self.dec_rr(Register16::DE),
            0x1C => self.inc_r(Register8::E),
            0x1D => self.dec_r(Register8::E),
            0x1E => self.ld_r_n(Register8::E),
            0x1F => self.rra(),

            0x20 => self.jr_cc_e(ZERO_FLAG, false),
            0x21 => self.ld_rr_nn(Register16::HL),
            0x22 => self.ldi_hl_a(),
            0x23 => self.inc_rr(Register16::HL),
            0x24 => self.inc_r(Register8::H),
            0x25 => self.dec_r(Register8::H),
            0x26 => self.ld_r_n(Register8::H),
            0x27 => self.daa(),
            0x28 => self.jr_cc_e(ZERO_FLAG, true),
            0x29 => self.add_hl(Register16::HL),
            0x2A => self.ldi_a_hl(),
            0x2B => self.dec_rr(Register16::HL),
            0x2C => self.inc_r(Register8::L),
            0x2D => self.dec_r(Register8::L),
            0x2E => self.ld_r_n(Register8::L),
            0x2F => self.cpl(),

            0x30 => self.jr_cc_e(CARRY_FLAG, false),
            0x31 => self.ld_rr_nn(Register16::SP),
            0x32 => self.ldd_hl_a(),
            0x33 => self.inc_rr(Register16::SP),
            0x34 => self.inc_indirect_hl(),
            0x35 => self.dec_indirect_hl(),
            0x36 => self.ld_indirect_hl_n(),
            0x37 => self.scf(),
            0x38 => self.jr_cc_e(CARRY_FLAG, true),
            0x39 => self.add_hl(Register16::SP),
            0x3A => self.ldd_a_hl(),
            0x3B => self.dec_rr(Register16::SP),
            0x3C => self.inc_r(Register8::A),
            0x3D => self.dec_r(Register8::A),
            0x3E => self.ld_r_n(Register8::A),
            0x3F => self.ccf(),

            0x40 => self.ld_r_r(Register8::B, Register8::B),
            0x41 => self.ld_r_r(Register8::B, Register8::C),
            0x42 => self.ld_r_r(Register8::B, Register8::D),
            0x43 => self.ld_r_r(Register8::B, Register8::E),
            0x44 => self.ld_r_r(Register8::B, Register8::H),
            0x45 => self.ld_r_r(Register8::B, Register8::L),
            0x46 => self.ld_r_r(Register8::B, Register8::IndirectHL),
            0x47 => self.ld_r_r(Register8::B, Register8::A),
            0x48 => self.ld_r_r(Register8::C, Register8::B),
            0x49 => self.ld_r_r(Register8::C, Register8::C),
            0x4A => self.ld_r_r(Register8::C, Register8::D),
            0x4B => self.ld_r_r(Register8::C, Register8::E),
            0x4C => self.ld_r_r(Register8::C, Register8::H),
            0x4D => self.ld_r_r(Register8::C, Register8::L),
            0x4E => self.ld_r_r(Register8::C, Register8::IndirectHL),
            0x4F => self.ld_r_r(Register8::C, Register8::A),

            0x50 => self.ld_r_r(Register8::D, Register8::B),
            0x51 => self.ld_r_r(Register8::D, Register8::C),
            0x52 => self.ld_r_r(Register8::D, Register8::D),
            0x53 => self.ld_r_r(Register8::D, Register8::E),
            0x54 => self.ld_r_r(Register8::D, Register8::H),
            0x55 => self.ld_r_r(Register8::D, Register8::L),
            0x56 => self.ld_r_r(Register8::D, Register8::IndirectHL),
            0x57 => self.ld_r_r(Register8::D, Register8::A),
            0x58 => self.ld_r_r(Register8::E, Register8::B),
            0x59 => self.ld_r_r(Register8::E, Register8::C),
            0x5A => self.ld_r_r(Register8::E, Register8::D),
            0x5B => self.ld_r_r(Register8::E, Register8::E),
            0x5C => self.ld_r_r(Register8::E, Register8::H),
            0x5D => self.ld_r_r(Register8::E, Register8::L),
            0x5E => self.ld_r_r(Register8::E, Register8::IndirectHL),
            0x5F => self.ld_r_r(Register8::E, Register8::A),

            0x60 => self.ld_r_r(Register8::H, Register8::B),
            0x61 => self.ld_r_r(Register8::H, Register8::C),
            0x62 => self.ld_r_r(Register8::H, Register8::D),
            0x63 => self.ld_r_r(Register8::H, Register8::E),
            0x64 => self.ld_r_r(Register8::H, Register8::H),
            0x65 => self.ld_r_r(Register8::H, Register8::L),
            0x66 => self.ld_r_r(Register8::H, Register8::IndirectHL),
            0x67 => self.ld_r_r(Register8::H, Register8::A),
            0x68 => self.ld_r_r(Register8::L, Register8::B),
            0x69 => self.ld_r_r(Register8::L, Register8::C),
            0x6A => self.ld_r_r(Register8::L, Register8::D),
            0x6B => self.ld_r_r(Register8::L, Register8::E),
            0x6C => self.ld_r_r(Register8::L, Register8::H),
            0x6D => self.ld_r_r(Register8::L, Register8::L),
            0x6E => self.ld_r_r(Register8::L, Register8::IndirectHL),
            0x6F => self.ld_r_r(Register8::L, Register8::A),

            0x70 => self.ld_hl_r(Register8::B),
            0x71 => self.ld_hl_r(Register8::C),
            0x72 => self.ld_hl_r(Register8::D),
            0x73 => self.ld_hl_r(Register8::E),
            0x74 => self.ld_hl_r(Register8::H),
            0x75 => self.ld_hl_r(Register8::L),
            0x76 => self.halt(),
            0x77 => self.ld_hl_r(Register8::A),
            0x78 => self.ld_r_r(Register8::A, Register8::B),
            0x79 => self.ld_r_r(Register8::A, Register8::C),
            0x7A => self.ld_r_r(Register8::A, Register8::D),
            0x7B => self.ld_r_r(Register8::A, Register8::E),
            0x7C => self.ld_r_r(Register8::A, Register8::H),
            0x7D => self.ld_r_r(Register8::A, Register8::L),
            0x7E => self.ld_r_r(Register8::A, Register8::IndirectHL),
            0x7F => self.ld_r_r(Register8::A, Register8::A),

            0x80 => self.add_a(self.b()),
            0x81 => self.add_a(self.c()),
            0x82 => self.add_a(self.d()),
            0x83 => self.add_a(self.e()),
            0x84 => self.add_a(self.h()),
            0x85 => self.add_a(self.l()),
            0x86 => self.add_a_hl(),
            0x87 => self.add_a(self.a()),
            0x88 => self.adc_a(self.b()),
            0x89 => self.adc_a(self.c()),
            0x8A => self.adc_a(self.d()),
            0x8B => self.adc_a(self.e()),
            0x8C => self.adc_a(self.h()),
            0x8D => self.adc_a(self.l()),
            0x8E => self.adc_a_hl(),
            0x8F => self.adc_a(self.a()),

            0x90 => self.sub_a(self.b()),
            0x91 => self.sub_a(self.c()),
            0x92 => self.sub_a(self.d()),
            0x93 => self.sub_a(self.e()),
            0x94 => self.sub_a(self.h()),
            0x95 => self.sub_a(self.l()),
            0x96 => self.sub_a_hl(),
            0x97 => self.sub_a(self.a()),
            0x98 => self.sbc_a(self.b()),
            0x99 => self.sbc_a(self.c()),
            0x9A => self.sbc_a(self.d()),
            0x9B => self.sbc_a(self.e()),
            0x9C => self.sbc_a(self.h()),
            0x9D => self.sbc_a(self.l()),
            0x9E => self.sbc_a_hl(),
            0x9F => self.sbc_a(self.a()),

            0xA0 => self.and_a(self.b()),
            0xA1 => self.and_a(self.c()),
            0xA2 => self.and_a(self.d()),
            0xA3 => self.and_a(self.e()),
            0xA4 => self.and_a(self.h()),
            0xA5 => self.and_a(self.l()),
            0xA6 => self.and_a_hl(),
            0xA7 => self.and_a(self.a()),
            0xA8 => self.xor_a(self.b()),
            0xA9 => self.xor_a(self.c()),
            0xAA => self.xor_a(self.d()),
            0xAB => self.xor_a(self.e()),
            0xAC => self.xor_a(self.h()),
            0xAD => self.xor_a(self.l()),
            0xAE => self.xor_a_hl(),
            0xAF => self.xor_a(self.a()),

            0xB0 => self.or_a(self.b()),
            0xB1 => self.or_a(self.c()),
            0xB2 => self.or_a(self.d()),
            0xB3 => self.or_a(self.e()),
            0xB4 => self.or_a(self.h()),
            0xB5 => self.or_a(self.l()),
            0xB6 => self.or_a_hl(),
            0xB7 => self.or_a(self.a()),
            0xB8 => self.cp_a(self.b()),
            0xB9 => self.cp_a(self.c()),
            0xBA => self.cp_a(self.d()),
            0xBB => self.cp_a(self.e()),
            0xBC => self.cp_a(self.h()),
            0xBD => self.cp_a(self.l()),
            0xBE => self.cp_a_hl(),
            0xBF => self.cp_a(self.a()),

            0xC0 => self.ret_cc(ZERO_FLAG, false),
            0xC1 => self.pop(Register16::BC),
            0xC2 => self.jp_cc_nn(ZERO_FLAG, false),
            0xC3 => self.jp_nn(),
            0xC4 => self.call_cc_nn(ZERO_FLAG, false),
            0xC5 => self.push(Register16::BC),
            0xC6 => self.add_a_n(),
            0xC7 => self.rst(0x00),
            0xC8 => self.ret_cc(ZERO_FLAG, true),
            0xC9 => self.ret(),
            0xCA => self.jp_cc_nn(ZERO_FLAG, true),
            0xCB => self.cb(),
            0xCC => self.call_cc_nn(ZERO_FLAG, true),
            0xCD => self.call(),
            0xCE => self.adc_a_n(),
            0xCF => self.rst(0x08),

            0xD0 => self.ret_cc(CARRY_FLAG, false),
            0xD1 => self.pop(Register16::DE),
            0xD2 => self.jp_cc_nn(CARRY_FLAG, false),
            // 0xD3 Invalid instruction
            0xD4 => self.call_cc_nn(CARRY_FLAG, false),
            0xD5 => self.push(Register16::DE),
            0xD6 => self.sub_a_n(),
            0xD7 => self.rst(0x10),
            0xD8 => self.ret_cc(CARRY_FLAG, true),
            0xD9 => self.reti(),
            0xDA => self.jp_cc_nn(CARRY_FLAG, true),
            // 0xDB Invalid instruction
            0xDC => self.call_cc_nn(CARRY_FLAG, true),
            // 0xDD Invalid instruction
            0xDE => self.sbc_a_n(),
            0xDF => self.rst(0x18),

            0xE0 => self.ldh_n_a(),
            0xE1 => self.pop(Register16::HL),
            0xE2 => self.ldh_c_a(),
            // 0xE3 Invalid instruction
            // 0xE4 Invalid instruction
            0xE5 => self.push(Register16::HL),
            0xE6 => self.and_a_n(),
            0xE7 => self.rst(0x20),
            0xE8 => self.add_sp(),
            0xE9 => self.jp_hl(),
            0xEA => self.ld_nn_a(),
            // 0xEB Invalid instruction
            0xEC => self.call_cc_nn(ZERO_FLAG, true),
            // 0xED Invalid instruction
            0xEE => self.xor_a_n(),
            0xEF => self.rst(0x28),

            0xF0 => self.ldh_a_n(),
            0xF1 => self.pop(Register16::AF),
            0xF2 => self.ldh_a_c(),
            0xF3 => self.di(),
            // 0xF4 Invalid instruction
            0xF5 => self.push(Register16::AF),
            0xF6 => self.or_a_n(),
            0xF7 => self.rst(0x30),
            0xF8 => self.ld_hl_sp_e8(),
            0xF9 => self.ld_sp_hl(),
            0xFA => self.ld_a_nn(),
            0xFB => self.ei(),
            // 0xFC Invalid instruction
            // 0xFD Invalid instruction
            0xFE => self.cp_a_n(),
            0xFF => self.rst(0x38),

            0xD3 | 0xDB | 0xDD | 0xE3 | 0xE4 | 0xEB | 0xED | 0xF4 | 0xFC | 0xFD => {
                panic!("Invalid instruction: 0x{:02X}", byte);
            }
        }
    }

    fn cb(&mut self) {
        let byte = self.read_instruction();
        match byte {
            0x00 => self.rlc_r(Register8::B),
            0x01 => self.rlc_r(Register8::C),
            0x02 => self.rlc_r(Register8::D),
            0x03 => self.rlc_r(Register8::E),
            0x04 => self.rlc_r(Register8::H),
            0x05 => self.rlc_r(Register8::L),
            0x06 => self.rlc_r(Register8::IndirectHL),
            0x07 => self.rlc_r(Register8::A),
            0x08 => self.rrc_r(Register8::B),
            0x09 => self.rrc_r(Register8::C),
            0x0A => self.rrc_r(Register8::D),
            0x0B => self.rrc_r(Register8::E),
            0x0C => self.rrc_r(Register8::H),
            0x0D => self.rrc_r(Register8::L),
            0x0E => self.rrc_r(Register8::IndirectHL),
            0x0F => self.rrc_r(Register8::A),

            0x10 => self.rl_r(Register8::B),
            0x11 => self.rl_r(Register8::C),
            0x12 => self.rl_r(Register8::D),
            0x13 => self.rl_r(Register8::E),
            0x14 => self.rl_r(Register8::H),
            0x15 => self.rl_r(Register8::L),
            0x16 => self.rl_r(Register8::IndirectHL),
            0x17 => self.rl_r(Register8::A),
            0x18 => self.rr_r(Register8::B),
            0x19 => self.rr_r(Register8::C),
            0x1A => self.rr_r(Register8::D),
            0x1B => self.rr_r(Register8::E),
            0x1C => self.rr_r(Register8::H),
            0x1D => self.rr_r(Register8::L),
            0x1E => self.rr_r(Register8::IndirectHL),
            0x1F => self.rr_r(Register8::A),

            0x20 => self.sla_r(Register8::B),
            0x21 => self.sla_r(Register8::C),
            0x22 => self.sla_r(Register8::D),
            0x23 => self.sla_r(Register8::E),
            0x24 => self.sla_r(Register8::H),
            0x25 => self.sla_r(Register8::L),
            0x26 => self.sla_r(Register8::IndirectHL),
            0x27 => self.sla_r(Register8::A),
            0x28 => self.sra_r(Register8::B),
            0x29 => self.sra_r(Register8::C),
            0x2A => self.sra_r(Register8::D),
            0x2B => self.sra_r(Register8::E),
            0x2C => self.sra_r(Register8::H),
            0x2D => self.sra_r(Register8::L),
            0x2E => self.sra_r(Register8::IndirectHL),
            0x2F => self.sra_r(Register8::A),

            0x30 => self.swap_r(Register8::B),
            0x31 => self.swap_r(Register8::C),
            0x32 => self.swap_r(Register8::D),
            0x33 => self.swap_r(Register8::E),
            0x34 => self.swap_r(Register8::H),
            0x35 => self.swap_r(Register8::L),
            0x36 => self.swap_r(Register8::IndirectHL),
            0x37 => self.swap_r(Register8::A),
            0x38 => self.srl_r(Register8::B),
            0x39 => self.srl_r(Register8::C),
            0x3A => self.srl_r(Register8::D),
            0x3B => self.srl_r(Register8::E),
            0x3C => self.srl_r(Register8::H),
            0x3D => self.srl_r(Register8::L),
            0x3E => self.srl_r(Register8::IndirectHL),
            0x3F => self.srl_r(Register8::A),

            0x40 => self.bit_r(U3::B0, Register8::B),
            0x41 => self.bit_r(U3::B0, Register8::C),
            0x42 => self.bit_r(U3::B0, Register8::D),
            0x43 => self.bit_r(U3::B0, Register8::E),
            0x44 => self.bit_r(U3::B0, Register8::H),
            0x45 => self.bit_r(U3::B0, Register8::L),
            0x46 => self.bit_r(U3::B0, Register8::IndirectHL),
            0x47 => self.bit_r(U3::B0, Register8::A),
            0x48 => self.bit_r(U3::B1, Register8::B),
            0x49 => self.bit_r(U3::B1, Register8::C),
            0x4A => self.bit_r(U3::B1, Register8::D),
            0x4B => self.bit_r(U3::B1, Register8::E),
            0x4C => self.bit_r(U3::B1, Register8::H),
            0x4D => self.bit_r(U3::B1, Register8::L),
            0x4E => self.bit_r(U3::B1, Register8::IndirectHL),
            0x4F => self.bit_r(U3::B1, Register8::A),

            0x50 => self.bit_r(U3::B2, Register8::B),
            0x51 => self.bit_r(U3::B2, Register8::C),
            0x52 => self.bit_r(U3::B2, Register8::D),
            0x53 => self.bit_r(U3::B2, Register8::E),
            0x54 => self.bit_r(U3::B2, Register8::H),
            0x55 => self.bit_r(U3::B2, Register8::L),
            0x56 => self.bit_r(U3::B2, Register8::IndirectHL),
            0x57 => self.bit_r(U3::B2, Register8::A),
            0x58 => self.bit_r(U3::B3, Register8::B),
            0x59 => self.bit_r(U3::B3, Register8::C),
            0x5A => self.bit_r(U3::B3, Register8::D),
            0x5B => self.bit_r(U3::B3, Register8::E),
            0x5C => self.bit_r(U3::B3, Register8::H),
            0x5D => self.bit_r(U3::B3, Register8::L),
            0x5E => self.bit_r(U3::B3, Register8::IndirectHL),
            0x5F => self.bit_r(U3::B3, Register8::A),

            0x60 => self.bit_r(U3::B4, Register8::B),
            0x61 => self.bit_r(U3::B4, Register8::C),
            0x62 => self.bit_r(U3::B4, Register8::D),
            0x63 => self.bit_r(U3::B4, Register8::E),
            0x64 => self.bit_r(U3::B4, Register8::H),
            0x65 => self.bit_r(U3::B4, Register8::L),
            0x66 => self.bit_r(U3::B4, Register8::IndirectHL),
            0x67 => self.bit_r(U3::B4, Register8::A),
            0x68 => self.bit_r(U3::B5, Register8::B),
            0x69 => self.bit_r(U3::B5, Register8::C),
            0x6A => self.bit_r(U3::B5, Register8::D),
            0x6B => self.bit_r(U3::B5, Register8::E),
            0x6C => self.bit_r(U3::B5, Register8::H),
            0x6D => self.bit_r(U3::B5, Register8::L),
            0x6E => self.bit_r(U3::B5, Register8::IndirectHL),
            0x6F => self.bit_r(U3::B5, Register8::A),

            0x70 => self.bit_r(U3::B6, Register8::B),
            0x71 => self.bit_r(U3::B6, Register8::C),
            0x72 => self.bit_r(U3::B6, Register8::D),
            0x73 => self.bit_r(U3::B6, Register8::E),
            0x74 => self.bit_r(U3::B6, Register8::H),
            0x75 => self.bit_r(U3::B6, Register8::L),
            0x76 => self.bit_r(U3::B6, Register8::IndirectHL),
            0x77 => self.bit_r(U3::B6, Register8::A),
            0x78 => self.bit_r(U3::B7, Register8::B),
            0x79 => self.bit_r(U3::B7, Register8::C),
            0x7A => self.bit_r(U3::B7, Register8::D),
            0x7B => self.bit_r(U3::B7, Register8::E),
            0x7C => self.bit_r(U3::B7, Register8::H),
            0x7D => self.bit_r(U3::B7, Register8::L),
            0x7E => self.bit_r(U3::B7, Register8::IndirectHL),
            0x7F => self.bit_r(U3::B7, Register8::A),

            0x80 => self.res_r(U3::B0, Register8::B),
            0x81 => self.res_r(U3::B0, Register8::C),
            0x82 => self.res_r(U3::B0, Register8::D),
            0x83 => self.res_r(U3::B0, Register8::E),
            0x84 => self.res_r(U3::B0, Register8::H),
            0x85 => self.res_r(U3::B0, Register8::L),
            0x86 => self.res_r(U3::B0, Register8::IndirectHL),
            0x87 => self.res_r(U3::B0, Register8::A),
            0x88 => self.res_r(U3::B1, Register8::B),
            0x89 => self.res_r(U3::B1, Register8::C),
            0x8A => self.res_r(U3::B1, Register8::D),
            0x8B => self.res_r(U3::B1, Register8::E),
            0x8C => self.res_r(U3::B1, Register8::H),
            0x8D => self.res_r(U3::B1, Register8::L),
            0x8E => self.res_r(U3::B1, Register8::IndirectHL),
            0x8F => self.res_r(U3::B1, Register8::A),

            0x90 => self.res_r(U3::B2, Register8::B),
            0x91 => self.res_r(U3::B2, Register8::C),
            0x92 => self.res_r(U3::B2, Register8::D),
            0x93 => self.res_r(U3::B2, Register8::E),
            0x94 => self.res_r(U3::B2, Register8::H),
            0x95 => self.res_r(U3::B2, Register8::L),
            0x96 => self.res_r(U3::B2, Register8::IndirectHL),
            0x97 => self.res_r(U3::B2, Register8::A),
            0x98 => self.res_r(U3::B3, Register8::B),
            0x99 => self.res_r(U3::B3, Register8::C),
            0x9A => self.res_r(U3::B3, Register8::D),
            0x9B => self.res_r(U3::B3, Register8::E),
            0x9C => self.res_r(U3::B3, Register8::H),
            0x9D => self.res_r(U3::B3, Register8::L),
            0x9E => self.res_r(U3::B3, Register8::IndirectHL),
            0x9F => self.res_r(U3::B3, Register8::A),

            0xA0 => self.res_r(U3::B4, Register8::B),
            0xA1 => self.res_r(U3::B4, Register8::C),
            0xA2 => self.res_r(U3::B4, Register8::D),
            0xA3 => self.res_r(U3::B4, Register8::E),
            0xA4 => self.res_r(U3::B4, Register8::H),
            0xA5 => self.res_r(U3::B4, Register8::L),
            0xA6 => self.res_r(U3::B4, Register8::IndirectHL),
            0xA7 => self.res_r(U3::B4, Register8::A),
            0xA8 => self.res_r(U3::B5, Register8::B),
            0xA9 => self.res_r(U3::B5, Register8::C),
            0xAA => self.res_r(U3::B5, Register8::D),
            0xAB => self.res_r(U3::B5, Register8::E),
            0xAC => self.res_r(U3::B5, Register8::H),
            0xAD => self.res_r(U3::B5, Register8::L),
            0xAE => self.res_r(U3::B5, Register8::IndirectHL),
            0xAF => self.res_r(U3::B5, Register8::A),

            0xB0 => self.res_r(U3::B6, Register8::B),
            0xB1 => self.res_r(U3::B6, Register8::C),
            0xB2 => self.res_r(U3::B6, Register8::D),
            0xB3 => self.res_r(U3::B6, Register8::E),
            0xB4 => self.res_r(U3::B6, Register8::H),
            0xB5 => self.res_r(U3::B6, Register8::L),
            0xB6 => self.res_r(U3::B6, Register8::IndirectHL),
            0xB7 => self.res_r(U3::B6, Register8::A),
            0xB8 => self.res_r(U3::B7, Register8::B),
            0xB9 => self.res_r(U3::B7, Register8::C),
            0xBA => self.res_r(U3::B7, Register8::D),
            0xBB => self.res_r(U3::B7, Register8::E),
            0xBC => self.res_r(U3::B7, Register8::H),
            0xBD => self.res_r(U3::B7, Register8::L),
            0xBE => self.res_r(U3::B7, Register8::IndirectHL),
            0xBF => self.res_r(U3::B7, Register8::A),

            0xC0 => self.set_r(U3::B0, Register8::B),
            0xC1 => self.set_r(U3::B0, Register8::C),
            0xC2 => self.set_r(U3::B0, Register8::D),
            0xC3 => self.set_r(U3::B0, Register8::E),
            0xC4 => self.set_r(U3::B0, Register8::H),
            0xC5 => self.set_r(U3::B0, Register8::L),
            0xC6 => self.set_r(U3::B0, Register8::IndirectHL),
            0xC7 => self.set_r(U3::B0, Register8::A),
            0xC8 => self.set_r(U3::B1, Register8::B),
            0xC9 => self.set_r(U3::B1, Register8::C),
            0xCA => self.set_r(U3::B1, Register8::D),
            0xCB => self.set_r(U3::B1, Register8::E),
            0xCC => self.set_r(U3::B1, Register8::H),
            0xCD => self.set_r(U3::B1, Register8::L),
            0xCE => self.set_r(U3::B1, Register8::IndirectHL),
            0xCF => self.set_r(U3::B1, Register8::A),

            0xD0 => self.set_r(U3::B2, Register8::B),
            0xD1 => self.set_r(U3::B2, Register8::C),
            0xD2 => self.set_r(U3::B2, Register8::D),
            0xD3 => self.set_r(U3::B2, Register8::E),
            0xD4 => self.set_r(U3::B2, Register8::H),
            0xD5 => self.set_r(U3::B2, Register8::L),
            0xD6 => self.set_r(U3::B2, Register8::IndirectHL),
            0xD7 => self.set_r(U3::B2, Register8::A),
            0xD8 => self.set_r(U3::B3, Register8::B),
            0xD9 => self.set_r(U3::B3, Register8::C),
            0xDA => self.set_r(U3::B3, Register8::D),
            0xDB => self.set_r(U3::B3, Register8::E),
            0xDC => self.set_r(U3::B3, Register8::H),
            0xDD => self.set_r(U3::B3, Register8::L),
            0xDE => self.set_r(U3::B3, Register8::IndirectHL),
            0xDF => self.set_r(U3::B3, Register8::A),

            0xE0 => self.set_r(U3::B4, Register8::B),
            0xE1 => self.set_r(U3::B4, Register8::C),
            0xE2 => self.set_r(U3::B4, Register8::D),
            0xE3 => self.set_r(U3::B4, Register8::E),
            0xE4 => self.set_r(U3::B4, Register8::H),
            0xE5 => self.set_r(U3::B4, Register8::L),
            0xE6 => self.set_r(U3::B4, Register8::IndirectHL),
            0xE7 => self.set_r(U3::B4, Register8::A),
            0xE8 => self.set_r(U3::B5, Register8::B),
            0xE9 => self.set_r(U3::B5, Register8::C),
            0xEA => self.set_r(U3::B5, Register8::D),
            0xEB => self.set_r(U3::B5, Register8::E),
            0xEC => self.set_r(U3::B5, Register8::H),
            0xED => self.set_r(U3::B5, Register8::L),
            0xEE => self.set_r(U3::B5, Register8::IndirectHL),
            0xEF => self.set_r(U3::B5, Register8::A),

            0xF0 => self.set_r(U3::B6, Register8::B),
            0xF1 => self.set_r(U3::B6, Register8::C),
            0xF2 => self.set_r(U3::B6, Register8::D),
            0xF3 => self.set_r(U3::B6, Register8::E),
            0xF4 => self.set_r(U3::B6, Register8::H),
            0xF5 => self.set_r(U3::B6, Register8::L),
            0xF6 => self.set_r(U3::B6, Register8::IndirectHL),
            0xF7 => self.set_r(U3::B6, Register8::A),
            0xF8 => self.set_r(U3::B7, Register8::B),
            0xF9 => self.set_r(U3::B7, Register8::C),
            0xFA => self.set_r(U3::B7, Register8::D),
            0xFB => self.set_r(U3::B7, Register8::E),
            0xFC => self.set_r(U3::B7, Register8::H),
            0xFD => self.set_r(U3::B7, Register8::L),
            0xFE => self.set_r(U3::B7, Register8::IndirectHL),
            0xFF => self.set_r(U3::B7, Register8::A),
        }
    }
}
